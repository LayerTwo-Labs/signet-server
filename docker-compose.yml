name: signet-server

services:
  mainchain:
    healthcheck:
     test: ["CMD", "drivechain-cli", "-rpcuser=user", "-rpcpassword=password", "-signet", "getblockchaininfo"]

    image: ghcr.io/layertwo-labs/bitcoin-patched:sha-32e384a
    # map the named volume to the data directory
    volumes: [mainchain-data:/home/drivechain/.drivechain]
    restart: unless-stopped
    ports:
      - "38333:38333" # P2P, exposed to the internet
      - "127.0.0.1:38332:38332" # RPC, only available from host machine
    command:
      - drivechaind
      - -rpcuser=user
      - -rpcpassword=password
      - -server
      - -signet
      - -signetblocktime=60
      - -signetchallenge=00141551188e5153533b4fdd555449e640d9cc129456
      - -acceptnonstdtxn
      - -listen
      - -rpcbind=0.0.0.0
      - -rpcallowip=0.0.0.0/0
      - -txindex
      - -fallbackfee=0.00021
      - -zmqpubsequence=tcp://0.0.0.0:29000
      - -rest

  enforcer: 
    image: ghcr.io/layertwo-labs/bip300301_enforcer:sha-ae376cb
    pull_policy: always
    restart: unless-stopped
    # Adjust these lines to adjust the RUST_LOG (or any other!) env var
    environment: 
      RUST_LOG: trace,h2=info,hyper_util=info
      RUST_BACKTRACE: 1

    healthcheck:
       test: ["CMD", "grpc_health_probe", "-service=cusf.mainchain.v1.ValidatorService", "-addr=localhost:50051"]

    volumes: [enforcer-data:/root/.local/share/bip300301_enforcer]
    ports: 
      - "127.0.0.1:50051:50051" # gRPC, only available from host machine
      - "127.0.0.1:8122:8122" # JSON-RPC, only available from host machine

    command:
      - --log-format=json
      - --log-level=trace
      - --node-rpc-addr=mainchain:38332
      - --node-rpc-user=user
      - --node-rpc-pass=password
      - --serve-grpc-addr=0.0.0.0:50051 # Expose over 0.0.0.0 so that other services can connect to it
      - --serve-rpc-addr=0.0.0.0:8122 # Expose over 0.0.0.0 so that other services can connect to it
      - --node-zmq-addr-sequence=tcp://mainchain:29000
      - --enable-wallet
      - --enable-mempool
      - --wallet-auto-create
      - --wallet-electrum-host=electrs
      - --wallet-skip-periodic-sync
      # mainchain Bitcoin Core address
      - --signet-miner-coinbase-recipient=tb1qduth40j5r3v3rjxfd0qefpnldqzpt00anf8ajl

  bitassets:
    image: ghcr.io/layertwo-labs/bitassets:sha-474b5d1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "plain_bitassets_app_cli", "balance"]
    # Bitassets uses the same networking stack as thunder, so doing the
    # same thing here.
    network_mode: host
    volumes:
      - bitassets-data:/root/.local/share/plain_bitassets
      - logs-data:/logs

    command:
      - --headless
      - --log-level=trace
      - --mainchain-grpc-host=0.0.0.0
      # For BitAssets to be reachable from other containers (via host-gateway) ,
      # we need to bind to 0.0.0.0. This means that the host machine needs to
      # make sure to /not/ expose this to the open internet!
      - --rpc-host=0.0.0.0
      - --rpc-port=6004

  bitnames:
    image: ghcr.io/layertwo-labs/bitnames:sha-1864e8d
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "plain_bitnames_app_cli", "balance"]
    # Bitnames uses the same networking stack as thunder, so doing the
    # same thing here.
    network_mode: host
    volumes:
      - bitnames-data:/root/.local/share/plain_bitnames
      - logs-data:/logs

    command:
      - --headless
      - --log-level=trace
      - --mainchain-grpc-host=0.0.0.0
      - --mainchain-grpc-port=50051
       # For Thunder to be reachable from other containers (via host-gateway) , 
       # we need to bind to 0.0.0.0. This means that the host machine needs to 
       # make sure to /not/ expose this to the open internet!
      - --rpc-addr=0.0.0.0:6002

  # TODO: must make the seed work... Either:
  # --mnemonic-seed-phrase-path and a file path
  # or a RPC 
  thunder:
    # Cannot get UDP to play well with Docker. Unable to connect external 
    # nodes to this one through the open internet. Works when running with 
    # host mode!
    network_mode: host 
    healthcheck:
      test: ["CMD", "thunder_app_cli", "--rpc-url=http://127.0.0.0:6009", "balance"]
    image: ghcr.io/layertwo-labs/thunder:sha-a1b96a0
    restart: unless-stopped
    volumes: 
      - thunder-data:/root/.local/share/thunder
      - logs-data:/logs
    # As long as we're running the container using the `host` network mode, 
    # these are discarded. 
    # ports: 
    #  - "4009:4009/udp" # P2P, exposed to the internet, over UDP
    #  - "127.0.0.1:6009:6009" # RPC, only available from host machine

    entrypoint: 
       - thunder_app
       - --headless
       - --mainchain-grpc-url=http://localhost:50051
       # For Thunder to be reachable from other containers (via host-gateway) , 
       # we need to bind to 0.0.0.0. This means that the host machine needs to 
       # make sure to /not/ expose this to the open internet!
       - --rpc-addr=0.0.0.0:6009
       - --log-level=trace
       - --log-level-file=trace
       - --log-dir=/logs/thunder

  mempool-db:
    environment:
      MYSQL_DATABASE: "mempool"
      MYSQL_USER: "mempool"
      MYSQL_PASSWORD: "mempool"
      MYSQL_ROOT_PASSWORD: "admin"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "mempool",
          "-pmempool",
        ]
    image: mariadb:10.5.21
    restart: unless-stopped
    stop_grace_period: 1m
    volumes: [mysql-data:/var/lib/mysql]

  mempool-web:
    environment:
      FRONTEND_HTTP_PORT: 8080
      BACKEND_MAINNET_HTTP_HOST: mempool-api
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080"]
    image: mempool/frontend:v3.2.1
    restart: unless-stopped
    stop_grace_period: 1m
    command: "./wait-for mempool-db:3306 --timeout=720 -- nginx -g 'daemon off;'"
    ports: 
      - 8080:8080 # should be reachable externally

  mempool-api:
    depends_on: [mempool-db]

    # conf: https://github.com/mempool/mempool/blob/e3c3f31ddbf9543db12ef4f7e5032566757d31f9/backend/mempool-config.sample.json#
    environment:
      MEMPOOL_NETWORK: signet
      MEMPOOL_BACKEND: "electrum"
      ELECTRUM_HOST: electrs
      ELECTRUM_PORT: 50001
      ELECTRUM_TLS_ENABLED: "false"
      CORE_RPC_HOST: mainchain
      CORE_RPC_PORT: 38332
      CORE_RPC_USERNAME: user
      CORE_RPC_PASSWORD: password
      DATABASE_ENABLED: "true"
      DATABASE_HOST: "mempool-db"
      DATABASE_DATABASE: "mempool"
      DATABASE_USERNAME: "mempool"
      DATABASE_PASSWORD: "mempool"
      STATISTICS_ENABLED: "true"
      FIAT_PRICE_ENABLED: false

    # 'latest' is on an ancient version
    image: mempool/backend:v3.2.1
    restart: unless-stopped
    stop_grace_period: 1m
    healthcheck:
      test: ["CMD", "curl", "--fail", "localhost:8999/api/v1/backend-info"]
    command: "./wait-for-it.sh mempool-db:3306 --timeout=720 --strict -- ./start.sh"
    volumes: [mempool-api-data:/backend/cache]

  # TODO: how do we enable SSL here?
  electrs:
    image: mempool/electrs
    # TODO: find something that works here with what's installed on the box
    # healthcheck:
    #  test: ["CMD", "curl", "--fail", "http://localhost:3000/blocks/tip/hash"]
    environment:
      RUST_BACKTRACE: 1

    restart: unless-stopped
    ports:
      - 50001:50001 # Electrum port!
      - 3000:3000 # Esplora REST API

    volumes: [electrs-data:/app/db]

    # https://github.com/Blockstream/esplora?tab=readme-ov-file#how-to-run-the-explorer-for-bitcoin-mainnet
    command:
      - -vvv # pretty verbose logging
      - --timestamp
      - --cookie=user:password
      - --daemon-rpc-addr=mainchain:38332
      - --jsonrpc-import
      - --db-dir=/app/db
      - --network=signet
      - --http-addr=0.0.0.0:3000
      - --electrum-rpc-addr=0.0.0.0:50001
      - --electrum-txs-limit=30000
      - --cors=*
  
  fast-withdraw-server: 
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    environment:
      BITCOIN_RPC_USER: user
      BITCOIN_RPC_PASS: password
      BITCOIN_RPC_URL: http://mainchain:38332
      THUNDER_RPC_URL: http://host.docker.internal:6009
      BITNAMES_RPC_URL: http://host.docker.internal:6002
      PORT: 3333 
      HOST: 0.0.0.0

    ports:
      - 3333:3333

    image: ghcr.io/layertwo-labs/fast-withdraw-server:sha-8abfc79
  
  faucet-backend:
    restart: unless-stopped
    image: ghcr.io/layertwo-labs/faucet-backend:sha-dc517e4
    pull_policy: always
    healthcheck: 
      test: ["CMD", "curl", "--fail", "-H", "Content-Type: application/json", "-X", "POST", "localhost:8082/faucet.v1.FaucetService/ListClaims"]
    ports: 
      - 8082:8082
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: 
      - faucetd
      - --bitcoincore.address=mainchain:38332
      - --bitcoincore.rpcuser=user
      - --bitcoincore.rpcpassword=password
      - --enforcer.host=enforcer
      - --bitnames.url=http://host.docker.internal:6002
      - --bitassets.url=http://host.docker.internal:6004
      - --thunder.url=http://host.docker.internal:6009
      - --listen=0.0.0.0:8082

  faucet-frontend:
    ports: 
      - 8081:80
    pull_policy: always
    image: ghcr.io/layertwo-labs/faucet-frontend:sha-5fe2737

  # Can be used to run a container with the same volumes as the other services. 
  # $ docker compose run --rm busybox sh

  # Todays Thunder logs: 
  #   $ docker compose run --rm busybox cat /logs/thunder/$(date +%Y-%m-%d).log | lnav
  busybox:
    profiles: [cli]
    image: busybox
    volumes: 
      - mainchain-data:/mainchain-data
      - enforcer-data:/enforcer-data
      - thunder-data:/thunder-data
      - logs-data:/logs

  buf:
    # Assign this to a special profile, so that `docker compose up` doesn't execute it. 
    profiles: [cli]
    image: bufbuild/buf
  
volumes: 
  mainchain-data:
  enforcer-data:
  thunder-data:
  bitassets-data:
  bitnames-data:
  electrs-data:
  logs-data:
  mysql-data:
  mempool-api-data:
