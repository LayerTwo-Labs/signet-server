name: signet-server

services:
  mainchain:
    healthcheck:
     test: ["CMD", "drivechain-cli", "-rpcuser=user", "-rpcpassword=password", "-signet", "getblockchaininfo"]

    image: ghcr.io/layertwo-labs/bitcoin-patched:sha-32e384a
    # map the named volume to the data directory
    volumes: [mainchain-data:/home/drivechain/.drivechain]
    restart: unless-stopped
    ports:
      - "38333:38333" # P2P, exposed to the internet
      - "127.0.0.1:38332:38332" # RPC, only available from host machine
    command:
      - drivechaind
      - -rpcuser=user
      - -rpcpassword=password
      - -server
      - -signet
      - -signetblocktime=60
      - -signetchallenge=00141551188e5153533b4fdd555449e640d9cc129456
      - -acceptnonstdtxn
      - -listen
      - -rpcbind=0.0.0.0
      - -rpcallowip=0.0.0.0/0
      - -txindex
      - -fallbackfee=0.00021
      - -zmqpubsequence=tcp://0.0.0.0:29000

  # TODO: we're connecting to the default drivechain.live `electrs` instance. 
  # Run one as part of this infra stack?
  enforcer: 
    image: ghcr.io/layertwo-labs/bip300301_enforcer:sha-8faa84c
    restart: unless-stopped
    # Adjust these lines to adjust the RUST_LOG (or any other!) env var
    environment: 
      RUST_LOG: trace,h2=info,hyper_util=info

    healthcheck:
       test: ["CMD", "grpc_health_probe", "-service=cusf.mainchain.v1.ValidatorService", "-addr=localhost:50051"]

    volumes: [enforcer-data:/root/.local/share/bip300301_enforcer]
    ports: 
      - "127.0.0.1:50051:50051" # gRPC, only available from host machine
      - "127.0.0.1:8122:8122" # JSON-RPC, only available from host machine

    command:
      - --node-rpc-addr=mainchain:38332
      - --node-rpc-user=user
      - --node-rpc-pass=password
      - --serve-grpc-addr=0.0.0.0:50051 # Expose over 0.0.0.0 so that other services can connect to it
      - --serve-rpc-addr=0.0.0.0:8122 # Expose over 0.0.0.0 so that other services can connect to it
      - --node-zmq-addr-sequence=tcp://mainchain:29000
      - --enable-wallet
      - --enable-mempool
      - --wallet-auto-create
      - --log-level=trace
      - --wallet-electrum-host=electrs
    
  bitnames: 
    image: ghcr.io/layertwo-labs/bitnames:pr-2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "plain_bitnames_app_cli", "balance"]
    # Bitnames uses the same networking stack as thunder, so doing the 
    # same thing here. 
    network_mode: host
    volumes: 
      - bitnames-data:/root/.local/share/plain_bitnames
      - logs-data:/logs

    command: 
      - --headless
      - --log-level=trace
      - --main-addr=0.0.0.0:50051

  # TODO: must make the seed work... Either:
  # --mnemonic-seed-phrase-path and a file path
  # or a RPC 
  thunder:
    # Cannot get UDP to play well with Docker. Unable to connect external 
    # nodes to this one through the open internet. Works when running with 
    # host mode!
    network_mode: host 
    healthcheck:
      test: ["CMD", "thunder_app_cli", "balance"]
    image: ghcr.io/layertwo-labs/thunder:sha-a781bf3
    restart: unless-stopped
    volumes: 
      - thunder-data:/root/.local/share/thunder
      - logs-data:/logs
    # As long as we're running the container using the `host` network mode, 
    # these are discarded. 
    # ports: 
    #  - "4009:4009/udp" # P2P, exposed to the internet, over UDP
    #  - "127.0.0.1:6009:6009" # RPC, only available from host machine

    entrypoint: 
       - thunder_app
       - --headless
       - --mainchain-grpc-address=http://localhost:50051
       - --rpc-addr=0.0.0.0:6009
       - --log-level=trace
       - --log-level-file=trace
       - --log-dir=/logs/thunder

  # TODO: how do we enable SSL here?
  electrs:
    image: mempool/electrs
    # TODO: find something that works here with what's installed on the box
    # healthcheck:
    #  test: ["CMD", "curl", "--fail", "http://localhost:3000/blocks/tip/hash"]
    environment:
      RUST_BACKTRACE: 1

    restart: unless-stopped
    ports:
      - 50001:50001 # Electrum port!

    volumes: [electrs-data:/app/db]

    # https://github.com/Blockstream/esplora?tab=readme-ov-file#how-to-run-the-explorer-for-bitcoin-mainnet
    command:
      - -vvv # pretty verbose logging
      - --timestamp
      - --cookie=user:password
      - --daemon-rpc-addr=mainchain:38332
      - --jsonrpc-import
      - --db-dir=/app/db
      - --network=signet
      - --http-addr=0.0.0.0:3000
      - --electrum-rpc-addr=0.0.0.0:50001
      - --electrum-txs-limit=30000
      - --cors=*

  # Can be used to run a container with the same volumes as the other services. 
  # $ docker compose run --rm busybox sh

  # Todays Thunder logs: 
  #   $ docker compose run --rm busybox cat /logs/thunder/$(date +%Y-%m-%d).log | lnav
  busybox:
    profiles: [cli]
    image: busybox
    volumes: 
      - mainchain-data:/mainchain-data
      - enforcer-data:/enforcer-data
      - thunder-data:/thunder-data
      - logs-data:/logs

  buf:
    # Assign this to a special profile, so that `docker compose up` doesn't execute it. 
    profiles: [cli]
    image: bufbuild/buf
  
volumes: 
  mainchain-data:
  enforcer-data:
  thunder-data:
  bitnames-data:
  electrs-data:
  logs-data:

